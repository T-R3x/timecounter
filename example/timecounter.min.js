function TimeCounter(){"use strict";var e=0;var t=undefined;var n=false;var r=arguments[0]||{};var i={autostart:false,hours:0,minutes:0,seconds:0,timeString:"00:00:00"};if(r){var s;for(s in i){if(r[s]!==undefined){i[s]=r[s]}}}Object.defineProperty(this,"count",{get:function(){return e},set:function(t){e=t}});Object.defineProperty(this,"hours",{get:function(){return this.formatNumber(i.hours)},set:function(e){i.hours=e}});Object.defineProperty(this,"minutes",{get:function(){return this.formatNumber(i.minutes)},set:function(e){i.minutes=e}});Object.defineProperty(this,"seconds",{get:function(){return this.formatNumber(i.seconds)},set:function(e){i.seconds=e}});this.setTime(i);if(i.autostart){this.start()}}TimeCounter.prototype={start:function(){if(this._intervalTimer!==undefined){if(this._isPaused){this.resumeCounting()}return false}console.log("Start time counting with: "+this.getTime());this._intervalTimer=window.setInterval(this.tick,1e3,this)},stop:function(){if(this._intervalTimer===undefined){return false}console.log("Stop time counting at: "+this.getTime());window.clearInterval(this._intervalTimer);this._intervalTimer=undefined;this._isPaused=false;this.resetTimeProps()},reset:function(){console.log("Reset time counting at: "+this.getTime());this.resetTimeProps();this.triggerResetEvent()},pause:function(){if(this._intervalTimer===undefined){return false}if(!this._isPaused){console.log("Pause the counting at : "+this.getTime());this._isPaused=true}else{this.resumeCounting()}},resumeCounting:function(){if(this._isPaused){console.log("Resume time counting on: "+this.getTime());this._isPaused=false}},resetTimeProps:function(){this._count=this.seconds=this.minutes=this.hours=0},getTime:function(){return[this.hours,this.minutes,this.seconds].join(":")},setTime:function(e){var t=arguments[0]||e||{};var n=0;var r=0;var i=0;if(Object.keys(t).length){if(t.hasOwnProperty("timeString")){var s=t.timeString.split(":");if(s.length===3){n=!isNaN(s[0])?parseInt(s[0]):0;r=!isNaN(s[1])?parseInt(s[1]):0;i=!isNaN(s[2])?parseInt(s[2]):0}else{throw new SyntaxError('The given time string is invalid! Please use the following format "hh:mm:ss". Given time is: '+t.timeString)}}else{n=!isNaN(t.hours)?parseInt(t.hours):0;r=!isNaN(t.minutes)?parseInt(t.minutes):0;i=!isNaN(t.seconds)?parseInt(t.seconds):0}if(i>59){throw new Error("Seconds must be between 0 - 59")}if(r>59){throw new Error("Minutes must be between 0 - 59")}this.hours=n;this.minutes=r;this.seconds=i}else{if(e===undefined){throw new SyntaxError("No arguments was given!")}}},setTimeByDate:function(e,t){if(!e instanceof Date){throw new SyntaxError("The given date is not an instance of Date")}this.setTime({hours:e.getHours(),minutes:e.getMinutes(),seconds:e.getSeconds()});if(t!==undefined&&t){this.start()}},tick:function(e){if(!e._isPaused){e.count++;e.seconds++;if(e.seconds%60===0){e.seconds=0;e.minutes++;if(e.minutes%60===0){e.minutes=0;e.hours++}}e.triggerTickEvent()}},triggerTickEvent:function(){var e=new CustomEvent("TimeCounter:tick",{detail:{time:this.getTime()}});document.dispatchEvent(e)},triggerResetEvent:function(){var e=new CustomEvent("TimeCounter:reset",{detail:{time:this.getTime()}});document.dispatchEvent(e)},formatNumber:function(e){return e<10?"0"+e:e}}